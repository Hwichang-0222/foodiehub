<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.embed.mapper.RestaurantMapper">

    <!-- ======================================
         기본 CRUD
    ====================================== -->
    
    <!-- 개별 맛집 조회 -->
    <select id="findById" parameterType="long" resultType="org.embed.dto.RestaurantDTO">
        <![CDATA[
            SELECT
                r.*,
                u.name AS owner_name,
                COALESCE(ROUND(AVG(rv.rating), 1), 0) AS avg_rating,
                COALESCE(COUNT(rv.id), 0) AS review_count
            FROM 
                restaurant r
            LEFT JOIN user u ON r.owner_id = u.id
            LEFT JOIN review rv ON r.id = rv.restaurant_id
            WHERE r.id = #{id}
            GROUP BY r.id
        ]]>
    </select>

    <!-- 맛집 등록 -->
    <insert id="insertRestaurant" parameterType="org.embed.dto.RestaurantDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO restaurant (
                owner_id,
                name, 
                description, 
                address, 
                region, 
                category, 
                latitude, 
                longitude, 
                main_image_url
            ) VALUES (
                #{ownerId},
                #{name}, 
                #{description}, 
                #{address}, 
                #{region}, 
                #{category},
                #{latitude}, 
                #{longitude}, 
                #{mainImageUrl}
            )
        ]]>
    </insert>

    <!-- 맛집 수정 -->
    <update id="updateRestaurant" parameterType="org.embed.dto.RestaurantDTO">
        <![CDATA[
            UPDATE restaurant
            SET
                name = #{name},
                description = #{description},
                address = #{address},
                region = #{region},
                category = #{category},
                latitude = #{latitude},
                longitude = #{longitude},
                main_image_url = #{mainImageUrl}
            WHERE id = #{id}
        ]]>
    </update>

    <!-- 맛집 삭제 -->
    <delete id="deleteRestaurant" parameterType="long">
        <![CDATA[
            DELETE FROM restaurant 
            WHERE id = #{id}
        ]]>
    </delete>

    <!-- ======================================
         검색/필터링
    ====================================== -->
    
    <!-- 필터 검색 (카테고리 / 지역 / 키워드, 평균 별점 포함) -->
    <select id="findByFilter" resultType="org.embed.dto.RestaurantDTO">
        <![CDATA[
            SELECT 
                r.*, 
                COALESCE(ROUND(AVG(rv.rating), 1), 0) AS avg_rating
            FROM 
                restaurant r
            LEFT JOIN review rv ON r.id = rv.restaurant_id
        ]]>
        <where>
            <!-- 지역 필터 -->
            <choose>
                <when test="region == '기타'">
                    r.region NOT IN (
                        '서울','부산','대구','인천','광주','대전','울산','세종',
                        '경기','강원','충북','충남','전북','전남','경북','경남','제주'
                    )
                </when>
                <otherwise>
                    <if test="region != null and region != ''">
                        r.region = #{region}
                    </if>
                </otherwise>
            </choose>

            <!-- 카테고리 필터 -->
            <choose>
                <when test="category == '기타'">
                    AND r.category NOT IN (
                        '한식','중식','일식','양식','분식',
                        '패스트푸드','카페','디저트','고기','해산물','술집'
                    )
                </when>
                <otherwise>
                    <if test="category != null and category != ''">
                        AND r.category = #{category}
                    </if>
                </otherwise>
            </choose>

            <!-- 키워드 (이름 검색) -->
            <if test="keyword != null and keyword != ''">
                AND r.name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        <![CDATA[
            GROUP BY r.id
            ORDER BY r.name ASC
            LIMIT #{offset}, #{limit}
        ]]>
    </select>

    <!-- 검색 결과 총 개수 -->
    <select id="countByFilter" resultType="int">
        <![CDATA[
            SELECT COUNT(*) 
            FROM restaurant r
        ]]>
        <where>
            <choose>
                <when test="region == '기타'">
                    r.region NOT IN (
                        '서울','부산','대구','인천','광주','대전','울산','세종',
                        '경기','강원','충북','충남','전북','전남','경북','경남','제주'
                    )
                </when>
                <otherwise>
                    <if test="region != null and region != ''">
                        r.region = #{region}
                    </if>
                </otherwise>
            </choose>

            <choose>
                <when test="category == '기타'">
                    AND r.category NOT IN (
                        '한식','중식','일식','양식','분식',
                        '패스트푸드','카페','디저트','고기','해산물','술집'
                    )
                </when>
                <otherwise>
                    <if test="category != null and category != ''">
                        AND r.category = #{category}
                    </if>
                </otherwise>
            </choose>

            <if test="keyword != null and keyword != ''">
                AND r.name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <!-- ======================================
         관리자 기능
    ====================================== -->
    
    <!-- 전체 맛집 조회 (오너 정보 + 평균 별점 + 검색/필터/페이지네이션) -->
    <select id="findAll" parameterType="map" resultType="org.embed.dto.RestaurantDTO">
        <![CDATA[
            SELECT 
                r.*, 
                u.name AS owner_name,
                COALESCE(ROUND(AVG(rv.rating), 1), 0) AS avg_rating
            FROM 
                restaurant r
            LEFT JOIN user u ON r.owner_id = u.id
            LEFT JOIN review rv ON r.id = rv.restaurant_id
        ]]>
        <where>
            <if test="keyword != null and keyword != ''">
                r.name LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="ownerFilter != null and ownerFilter == 'HAS'">
                AND r.owner_id IS NOT NULL
            </if>
            <if test="ownerFilter != null and ownerFilter == 'NONE'">
                AND r.owner_id IS NULL
            </if>
        </where>
        <![CDATA[
            GROUP BY r.id
            ORDER BY r.created_at DESC
            LIMIT #{offset}, #{limit}
        ]]>
    </select>

    <!-- 총 식당 개수 (검색/오너 필터 포함) -->
    <select id="countAllWithOwner" parameterType="map" resultType="int">
        <![CDATA[
            SELECT COUNT(*) FROM restaurant r
        ]]>
        <where>
            <if test="keyword != null and keyword != ''">
                r.name LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="ownerFilter != null and ownerFilter == 'HAS'">
                AND r.owner_id IS NOT NULL
            </if>
            <if test="ownerFilter != null and ownerFilter == 'NONE'">
                AND r.owner_id IS NULL
            </if>
        </where>
    </select>

    <!-- 식당 오너 지정/변경 -->
    <update id="updateOwner" parameterType="map">
        <![CDATA[
            UPDATE restaurant
            SET owner_id = #{ownerId}
            WHERE id = #{restaurantId}
        ]]>
    </update>
    
    <!-- 전체 오너 배정된 유저 ID 목록 -->
    <select id="findAssignedOwnerIds" resultType="long">
        <![CDATA[
            SELECT DISTINCT owner_id
            FROM restaurant
            WHERE owner_id IS NOT NULL
        ]]>
    </select>

</mapper>