<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.embed.mapper.UserMapper">

    <!-- ======================================
         기본 CRUD
    ====================================== -->
    
    <!-- ID로 단일 조회 -->
    <select id="findById" parameterType="long" resultType="org.embed.dto.UserDTO">
        <![CDATA[
            SELECT 
                id,
                email,
                password,
                name,
                birth_date AS birthDate,
                gender,
                phone,
                address,
                profile_image_url AS profileImageUrl,
                provider,
                role,
                is_deleted AS isDeleted,
                created_at AS createdAt
            FROM user
            WHERE id = #{id}
              AND is_deleted = 'N'
        ]]>
    </select>

    <!-- 이메일로 단일 조회 -->
    <select id="findByEmail" parameterType="string" resultType="org.embed.dto.UserDTO">
        <![CDATA[
            SELECT 
                id,
                email,
                password,
                name,
                birth_date AS birthDate,
                gender,
                phone,
                address,
                profile_image_url AS profileImageUrl,
                provider,
                role,
                is_deleted AS isDeleted,
                created_at AS createdAt
            FROM user
            WHERE email = #{email}
              AND is_deleted = 'N'
        ]]>
    </select>

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="org.embed.dto.UserDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO user (
                email, 
                password, 
                name, 
                birth_date, 
                gender, 
                phone, 
                address, 
                profile_image_url, 
                provider, 
                role, 
                is_deleted, 
                created_at
            ) VALUES (
                #{email}, 
                #{password}, 
                #{name}, 
                #{birthDate}, 
                #{gender}, 
                #{phone}, 
                #{address}, 
                #{profileImageUrl}, 
                #{provider}, 
                #{role}, 
                'N', 
                NOW()
            )
        ]]>
    </insert>

    <!-- 회원정보 수정 -->
    <update id="updateUser" parameterType="org.embed.dto.UserDTO">
        <![CDATA[
            UPDATE user
            SET 
                password = #{password},
                name = #{name},
                phone = #{phone},
                address = #{address},
                profile_image_url = #{profileImageUrl}
            WHERE id = #{id}
              AND is_deleted = 'N'
        ]]>
    </update>

    <!-- 논리 삭제 (회원 탈퇴) -->
    <update id="softDeleteUser" parameterType="long">
        <![CDATA[
            UPDATE user
            SET 
                is_deleted = 'Y'
            WHERE id = #{id}
        ]]>
    </update>

    <!-- ======================================
         인증 관련
    ====================================== -->
    
    <!-- 이메일 중복 확인 -->
    <select id="countByEmail" parameterType="string" resultType="int">
        <![CDATA[
            SELECT COUNT(*)
            FROM user
            WHERE email = #{email}
              AND is_deleted = 'N'
        ]]>
    </select>

    <!-- 로그인 검증 -->
    <select id="validateLogin" resultType="org.embed.dto.UserDTO">
        <![CDATA[
            SELECT 
                id,
                email,
                password,
                name,
                birth_date AS birthDate,
                gender,
                phone,
                address,
                profile_image_url AS profileImageUrl,
                provider,
                role,
                is_deleted AS isDeleted,
                created_at AS createdAt
            FROM user
            WHERE email = #{email}
              AND password = #{password}
              AND is_deleted = 'N'
        ]]>
    </select>

    <!-- ======================================
         관리자 기능
    ====================================== -->
    
    <!-- 권한 변경 -->
    <update id="updateUserRole">
        <![CDATA[
            UPDATE user
            SET 
                role = #{role}
            WHERE id = #{id}
        ]]>
    </update>

    <!-- 회원 검색 (키워드/상태/역할 필터링) -->
    <select id="searchUsers" resultType="org.embed.dto.UserDTO">
        <![CDATA[
            SELECT 
                id, 
                email, 
                name, 
                role, 
                is_deleted AS isDeleted, 
                created_at AS createdAt
            FROM user
            WHERE 1=1
        ]]>
        <if test="keyword != null and keyword != ''">
            <![CDATA[
                AND (name LIKE CONCAT('%', #{keyword}, '%') OR email LIKE CONCAT('%', #{keyword}, '%'))
            ]]>
        </if>
        <if test="status != null and status != ''">
            <![CDATA[
                AND is_deleted = #{status}
            ]]>
        </if>
        <if test="role != null and role != ''">
            <![CDATA[
                AND role = #{role}
            ]]>
        </if>
        <![CDATA[
            ORDER BY created_at DESC
            LIMIT #{offset}, #{limit}
        ]]>
    </select>

    <!-- 회원 검색 결과 수 카운트 -->
    <select id="countSearchUsers" resultType="int">
        <![CDATA[
            SELECT COUNT(*) 
            FROM user
            WHERE 1=1
        ]]>
        <if test="keyword != null and keyword != ''">
            <![CDATA[
                AND (name LIKE CONCAT('%', #{keyword}, '%') OR email LIKE CONCAT('%', #{keyword}, '%'))
            ]]>
        </if>
        <if test="status != null and status != ''">
            <![CDATA[
                AND is_deleted = #{status}
            ]]>
        </if>
        <if test="role != null and role != ''">
            <![CDATA[
                AND role = #{role}
            ]]>
        </if>
    </select>

    <!-- 역할별 유저 조회 -->
    <select id="findByRole" parameterType="String" resultType="org.embed.dto.UserDTO">
        <![CDATA[
            SELECT id, name 
            FROM user 
            WHERE role = #{role} 
              AND is_deleted = 'N'
            ORDER BY name ASC
        ]]>
    </select>

</mapper>