<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.embed.mapper.ReviewMapper">

    <!-- 1️. 맛집별 리뷰 (댓글 제외, 최신순) -->
    <select id="findByRestaurantId" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT
            	r.*, 
            	u.name AS user_name, 
            	u.profile_image_url, 
            	res.name AS restaurant_name
            FROM
            	review r
            LEFT JOIN user u ON r.user_id = u.id
            LEFT JOIN restaurant res ON r.restaurant_id = res.id
            WHERE r.restaurant_id = #{restaurantId}
				AND r.parent_id IS NULL
            ORDER BY r.created_at DESC
        ]]>
    </select>

    <!-- 2️. 단건 조회 -->
    <select id="findById" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT
            	r.*, 
            	u.name AS user_name, 
            	u.profile_image_url
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.id = #{id}
        ]]>
    </select>

    <!-- 3️. 리뷰 등록 -->
    <insert id="insertReview" parameterType="org.embed.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO review (
                restaurant_id, 
                user_id, 
                parent_id, 
                content, 
                rating, 
                is_reply
            ) VALUES (
                #{restaurantId}, 
                #{userId}, 
                NULL, 
                #{content},
                #{rating}, 
                FALSE
            )
        ]]>
    </insert>

    <!-- 4️. 댓글 / 대댓글 등록 (2단계까지만 허용) -->
    <insert id="insertReply" parameterType="org.embed.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO review (
			    restaurant_id,
			    user_id,
			    parent_id,
			    content,
			    rating,
			    is_reply
			)
			SELECT 
			    #{restaurantId},     -- 댓글을 다는 대상 식당 ID
			    #{userId},           -- 작성자 ID
			    #{parentId},         -- 부모 리뷰(댓글) ID
			    #{content},          -- 내용
			    NULL,                -- 별점 (댓글엔 없음)
			    TRUE                 -- 댓글 여부
			FROM review
			WHERE id = #{parentId}
			AND (
				parent_id IS NULL                     -- 부모가 리뷰면 댓글 허용
				OR (
					parent_id IS NOT NULL             -- 부모가 댓글이면
					AND (
						SELECT parent_id              -- 그 댓글의 부모의 parent_id
						FROM review
						WHERE id = (SELECT parent_id FROM review WHERE id = #{parentId})
					) IS NULL                         -- 그 댓글의 부모가 리뷰면 대댓글 허용
				)
			)
        ]]>
    </insert>

    <!-- 5️. 리뷰 수정 -->
    <update id="updateReview" parameterType="org.embed.dto.ReviewDTO">
        <![CDATA[
            UPDATE 
            	review
            SET 
            	content = #{content}, 
            	rating = #{rating}
            WHERE id = #{id}
        ]]>
    </update>

    <!-- 6️. 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="long">
        <![CDATA[
            DELETE FROM 
            	review 
            WHERE id = #{id}
        ]]>
    </delete>

    <!-- 7️. 댓글 / 대댓글 조회 -->
    <select id="findRepliesByParentId" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
            	r.*, 
            	u.name AS user_name, 
            	u.profile_image_url
            FROM 
            	review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.parent_id = #{parentId}
            ORDER BY r.created_at ASC
        ]]>
    </select>

    <!-- 8️. 최신 리뷰 5개 (맛집 상세용) -->
    <select id="findTop5Reviews" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
	        SELECT 
	            r.id,
	            r.restaurant_id,
	            r.user_id,
	            r.content,
	            r.rating,
	            r.created_at,
	            u.name AS user_name,
	            u.profile_image_url
	        FROM review r
	        LEFT JOIN user u ON r.user_id = u.id
	        WHERE r.restaurant_id = #{restaurantId}
	          AND r.parent_id IS NULL
	        ORDER BY r.created_at DESC
	        LIMIT 5
	    ]]>
    </select>

    <!-- 9️. 페이징 (1페이지당 1리뷰 + 댓글 포함) -->
    <select id="findPagedReviews" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
            	r.*, 
            	u.name AS user_name, 
            	u.profile_image_url
            FROM 
            	review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.restaurant_id = #{restaurantId}
              AND r.parent_id IS NULL
            ORDER BY r.created_at DESC
            LIMIT #{offset}, 1
        ]]>
    </select>

</mapper>
