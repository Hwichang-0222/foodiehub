<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.embed.mapper.ReviewMapper">

    <!-- 1. 맛집별 리뷰 (댓글 제외, 최신순) -->
    <select id="findByRestaurantId" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT
                r.*, 
                u.name AS user_name, 
                u.profile_image_url, 
                res.name AS restaurant_name
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            LEFT JOIN restaurant res ON r.restaurant_id = res.id
            WHERE r.restaurant_id = #{restaurantId}
              AND r.parent_id IS NULL
            ORDER BY r.created_at DESC
        ]]>
    </select>

    <!-- 2. 리뷰 본문 조회 (작성자 정보 포함) -->
    <select id="findReviewWithUser" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
                r.*, 
                u.name AS user_name, 
                u.profile_image_url,
                res.name AS restaurant_name
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            LEFT JOIN restaurant res ON r.restaurant_id = res.id
            WHERE r.id = #{id}
        ]]>
    </select>

    <!-- 3. 댓글 및 대댓글 조회 -->
    <select id="findRepliesByParentId" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
                r.*, 
                u.name AS user_name, 
                u.profile_image_url
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.parent_id = #{parentId}
            ORDER BY r.created_at ASC
        ]]>
    </select>

    <!-- 4. 리뷰 등록 -->
    <insert id="insertReview" parameterType="org.embed.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO review (
                restaurant_id, 
                user_id, 
                parent_id, 
                content, 
                rating, 
                is_reply
            ) VALUES (
                #{restaurantId}, 
                #{userId}, 
                NULL, 
                #{content}, 
                #{rating}, 
                FALSE
            )
        ]]>
    </insert>

    <!-- 5. 댓글 / 대댓글 등록 -->
    <insert id="insertReply" parameterType="org.embed.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO review (
                restaurant_id, 
                user_id, 
                parent_id, 
                content, 
                rating, 
                is_reply
            ) VALUES (
                #{restaurantId}, 
                #{userId}, 
                #{parentId}, 
                #{content}, 
                NULL, 
                TRUE
            )
        ]]>
    </insert>

    <!-- 6. 리뷰 수정 -->
    <update id="updateReview" parameterType="org.embed.dto.ReviewDTO">
        <![CDATA[
            UPDATE review
            SET 
                content = #{content}, 
                rating = #{rating}
            WHERE id = #{id}
        ]]>
    </update>

    <!-- 7. 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="long">
        <![CDATA[
            DELETE FROM review WHERE id = #{id}
        ]]>
    </delete>

    <!-- 8. 최신 리뷰 5개 (맛집 상세용) -->
    <select id="findTop5Reviews" parameterType="long" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
                r.id,
                r.restaurant_id,
                r.user_id,
                r.content,
                r.rating,
                r.created_at,
                u.name AS user_name,
                u.profile_image_url
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.restaurant_id = #{restaurantId}
              AND r.parent_id IS NULL
            ORDER BY r.created_at DESC
            LIMIT 5
        ]]>
    </select>

    <!-- 9. 리뷰 페이지네이션 (리뷰 + 댓글 별도 조회 구조용) -->
    <select id="findPagedReviews" resultType="org.embed.dto.ReviewDTO">
        <![CDATA[
            SELECT 
                r.*, 
                u.name AS user_name, 
                u.profile_image_url
            FROM review r
            LEFT JOIN user u ON r.user_id = u.id
            WHERE r.restaurant_id = #{restaurantId}
              AND r.parent_id IS NULL
            ORDER BY r.created_at DESC
            LIMIT #{offset}, #{limit}
        ]]>
    </select>

    <!-- 10. 맛집별 평균 별점 -->
    <select id="findAverageRating" parameterType="long" resultType="double">
        <![CDATA[
	        SELECT ROUND(AVG(rating), 1)
	        FROM review
	        WHERE restaurant_id = #{restaurantId}
	          AND is_reply = 0
	          AND rating IS NOT NULL
		]]>
    </select>

</mapper>
